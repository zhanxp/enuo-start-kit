<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-lazy-init="true">

    <description>数据库配置</description>

    <bean name="dataSource_02" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbc_url_01}" />
        <property name="username" value="${jdbc_username_01}" />
        <property name="password" value="${jdbc_password_01}" />

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="5" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />

        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat" />
    </bean>


    <!-- myBatis文件 -->
    <bean id="sessionFactory_02" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <property name="dataSource" ref="dataSource_02" />
        <property name="configLocation" value="classpath:conf/sqlmap-config.xml" />
        <property name="mapperLocations">
            <array>
                <value>classpath*:com/enuocms/account/*/mapping/*Mapper.xml</value>
            </array>
        </property>
        <property name="plugins">
            <array>
                <bean class="com.enuocms.core.mapper.PageHelper"/>
                <bean class="tk.mybatis.mapper.mapperhelper.MapperInterceptor">
                    <property name="properties">
                        <value>
                            mappers=tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.BaseMapper,tk.mybatis.mapper.common.MySqlMapper,tk.mybatis.mapper.common.RowBoundsMapper
                            IDENTITY=MYSQL
                            notEmpty=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean id="jdbcTemplate_02" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg>
            <ref bean="sessionFactory_02"></ref>
        </constructor-arg>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.enuocms.account.*.mapper" />
        <property name="annotationClass" value="com.enuocms.core.mapper.SqlMapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sessionFactory_02"></property>
        <property name="sqlSessionTemplateBeanName" value="jdbcTemplate_02"></property>
    </bean>

    <bean id="transactionManager_02" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource_02"></property>
    </bean>

    <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice_02" transaction-manager="transactionManager_02">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="append*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="modify*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="repair" propagation="REQUIRED" />
            <tx:method name="delAndRepair" propagation="REQUIRED" />
            <tx:method name="batch*" propagation="REQUIRED" />

            <tx:method name="get*" propagation="SUPPORTS" />
            <tx:method name="find*" propagation="SUPPORTS" />
            <tx:method name="load*" propagation="SUPPORTS" />
            <tx:method name="search*" propagation="SUPPORTS" />
            <tx:method name="datagrid*" propagation="SUPPORTS" />

            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="transactionPointcut_02"
                      expression="execution(* com.enuocms.account.*.serviceImpl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut_02"
                     advice-ref="transactionAdvice_02" />
    </aop:config>


    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor_02"  class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>

    <bean id="druid-stat-pointcut_02" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
          scope="prototype">
        <property name="patterns">
            <list>
                <value>com.enuocms.account.*.serviceImpl</value>
            </list>
        </property>
    </bean>

    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor_02"  pointcut-ref="druid-stat-pointcut_02" />
    </aop:config>

</beans>
